name: Build Chromium ARM64 AppImage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v3

      # 设置工作环境
      - name: Set up environment
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support
          sudo apt-get install -y libfuse2 build-essential wget

      # 拉取并运行 Debian 容器，准备打包环境
      - name: Set up Debian container
        run: |
          docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
          docker run --name debian-arm64 -d --platform linux/arm64 debian:bullseye sleep infinity

      # 安装 Chromium 和必要工具
      - name: Install Chromium and tools inside container
        run: |
          docker exec debian-arm64 bash -c "
            apt-get update &&
            apt-get install -y chromium wget libfuse2 build-essential zsync dpkg
          "

      # 设置 AppDir 结构并复制 Chromium 及其依赖
      - name: Set up AppDir structure and copy Chromium
        run: |
          docker exec debian-arm64 bash -c "
            mkdir -p /workspace/AppDir &&
            cp -r /usr/bin /workspace/AppDir/usr &&
            cp -r /usr/lib /workspace/AppDir/usr &&
            cp -r /usr/share /workspace/AppDir/usr/share &&
            cp -r /etc /workspace/AppDir/etc
          "

      # 创建启动器脚本
      - name: Create AppImage launcher script
        run: |
          docker exec debian-arm64 bash -c "
            echo '#!/bin/bash' > /workspace/AppDir/AppRun &&
            echo 'exec /usr/bin/chromium --no-sandbox \"\$@\"' >> /workspace/AppDir/AppRun &&
            chmod +x /workspace/AppDir/AppRun
          "

      # 下载 AppImage 工具并生成 AppImage
      - name: Build AppImage
        run: |
          docker exec debian-arm64 bash -c "
            cd /workspace &&
            wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-aarch64.AppImage &&
            chmod +x appimagetool-aarch64.AppImage &&
            ./appimagetool-aarch64.AppImage AppDir
          "

      # 将生成的 AppImage 上传为 Artifact
      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v3
        with:
          name: chromium-arm64.AppImage
          path: /workspace/chromium-arm64.AppImage
